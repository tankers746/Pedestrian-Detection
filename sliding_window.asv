clear; close all; clc;

% Setup MatConVent and libsvm
run('./matconvnet/matlab/vl_setupnn');
%Load the pre-trained net
net = load('imagenet-vgg-f.mat');
net = vl_simplenn_tidy(net) ;
%Remove the last layer (softmax layer)
net.layers = net.layers(1 : end - 1);

% load classifier
load classifier
%load image
im = imread('.\PennFudanPed\PNGImages\FudanPed00001.png');


[Oy,Ox] = size(im); % get original image size, for later
scaleFactor = 100/0.6; % tune denominator for pedestrian height as a fraction of image height
scale = scaleFactor/Oy;
im2 = imresize(im,scale);

[Ny,Nx] = size(im2); % new image sizes
% set sliding window size
sx = 50;
sy = 100;
overlap = 10;

% slide
imshow(im2); hold on
for hx = 1:overlap:(Nx-sx)
    for hy = 1:overlap*2:(Ny-sy)
        seg=im2(hy:(hy+sy-1),hx:(hx+sx-1));
        seg=imresize(seg, net.meta.normalization.imageSize(1:2));
        seg = single(seg); % note: 0-255 range
        seg = bsxfun(@minus, seg, net.meta.normalization.averageImage);
        
        % extract HOG features from bounding box
        feats = vl_simplenn(net, seg) ;
        features(:) = squeeze(feats(end).x);
        [label, score] = predict(classifier,features);
        score
        if label == 'positive'
            rectangle('Position', [hx hy sx sy])
        end
    end
end

% check confidence